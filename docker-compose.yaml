version: '3.8'

services:
  app:
    container_name: express-app
    build:
      context: .
    ports:
      - '5555:5555'
      - '5005:5005'
    volumes:
      - ./:/opt/app
    #command: ['npm', 'run', 'start:dev']
    command: ['npm', 'run', 'start:cluster']
    labels:
      logging: 'promtail'
      logging_jobname: 'containerlogs'
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - monitoring

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - ./docker/promtail/config.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - monitoring
    depends_on:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring

volumes:
  prom_data:

networks:
  monitoring: